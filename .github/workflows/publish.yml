name: Publish
on:
  push:
    branches: [ master ]
  release:
    types: [ published ]

env:
  ENV: production

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        package:
          - packages/cli
          - packages/core
          - packages/aws
          - packages/webpack
          - packages/essentials
          - packages/serverless

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node_modules
        id: cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.OS }}-${{ hashFiles('yarn.lock') }}
      
      - run: ls -lah

      - if: github.event_name == 'push'
        name: Read package.json Version
        uses: actions/github-script@v3
        id: package-version
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: return require('./package.json').version;
          result-encoding: string

      - if: github.event_name == 'release'
        name: Read Relesase Version
        uses: actions/github-script@v3
        id: release-version
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: return context.payload.ref.replace(/\/refs\/tags\//, '').slice(1);
          result-encoding: string

      - if: github.event_name == 'push'
        name: Prepare For Patch Release
        run: yarn prepare-release --new-version "${{ steps.package-version.outputs.result }}-${GITHUB_SHA::7}"

      - if: github.event_name == 'release'
        name: Prepare For Patch Release
        run: yarn prepare-release --new-version "${{ steps.release-version.outputs.result }}"

      - name: Publish ${{ matrix.package }}
        run: yarn publish --non-interactive --access public
        working-directory: ${{ matrix.package }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
