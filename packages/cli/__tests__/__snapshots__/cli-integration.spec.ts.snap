// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`kraken.js After Generate Project serverless print --stage offline 1`] = `
"service:
  name: electric-wolf-kraken
configValidationMode: 'off'
provider:
  stage: offline
  region: us-east-1
  name: aws
  versionFunctions: false
  runtime: nodejs14.x
  timeout: 7
  memorySize: 1792
  logRetentionInDays: 7
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:InvokeAsync
            - lambda:InvokeFunction
          Resource: '*'
  stackTags:
    service: electric-wolf-kraken
    stage: offline
    region: us-east-1
    version: 1.0.0
  environment:
    STAGE: offline
    REGION: us-east-1
    SERVICE: electric-wolf-kraken
    VERSION: 1.0.0
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    ROOT_DOT_ENV: '1'
    IS_OFFLINE: 'true'
    OFFLINE_DOT_ENV: '1'
  variableSyntax: \\\\\${([^{}:]+?(?:\\\\(|:)(?:[^:{}][^{}]*?)?)}
plugins:
  - serverless-pseudo-parameters
  - serverless-webpack
custom:
  kraken:
    - '@kraken.js/essentials'
    - '@kraken.js/essentials:aws'
    - '@kraken.js/aws'
    - '@kraken.js/aws:subscriptions'
  webpack:
    packager: yarn
    includeModules:
      forceExclude:
        - aws-sdk
  account: '#{AWS::AccountId}'
  region: us-east-1
  stage: offline
  version: 1.0.0
  prefix: electric-wolf-kraken-offline
  cors:
    origin: '*'
    maxAge: 86400
    cacheControl: max-age=86400
    headers:
      - Content-Type
      - Authorization
      - Range
  tables:
    subscriptions: WsSubscriptions-offline
functions:
  hello:
    handler: src/hello-handler.handler
    events: []
    name: electric-wolf-kraken-offline-hello
  wsGraphqlHandler:
    handler: src/ws-handler.handler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: $default
    name: electric-wolf-kraken-offline-wsGraphqlHandler
  httpGraphqlHandler:
    handler: src/http-handler.handler
    events:
      - http:
          path: graphql
          method: any
    name: electric-wolf-kraken-offline-httpGraphqlHandler
"
`;

exports[`kraken.js After Generate Project should generate src/schema.ts file 1`] = `
"import { krakenJs } from '@kraken.js/core';
import { graphqlSchema as krakenJsAws } from '@kraken.js/aws';
import { graphqlSchema as electricWolfKraken } from '@electric-wolf/kraken';

export const krakenSchema = krakenJs([
	krakenJsAws(),
	electricWolfKraken
], { batchResponses: false });
"
`;
